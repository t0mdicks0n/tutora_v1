version: "3"
services:
  redis:
    image: "redis:alpine"
    deploy:
      placement:
        constraints: [node.role == manager]
    expose:
      - 6379
    networks:
      - webnet
  db:
    image: postgres
    ports:
      - "5432:5432"
    expose:
      - 5432
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: thesis
    volumes: 
      - db-data:/var/lib/postgresql/data
    networks:
      - webnet
  web:
    build: .
    # image: tutora
    # deploy:
    #   replicas: 5
    #   restart_policy:
    #     condition: on-failure
    #   resources:
    #     limits:
    #       cpus: "0.1"
    #       memory: 50M
    links:
      - db
    ports:
      - "3000:3000"
    networks:
     - webnet
    depends_on:
      - redis
    environment:
      - REDIS_HOST=redis
      - COMPOSE_PROJECT_NAME=tutora
      - DOCKER=isTrue
    command: npm run migrateDB
    networks:
      - webnet
  paymentsdb:
    image: postgres
    ports:
      - "5433:5432"
    expose:
      - 5433
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: payments
    networks:
      - webnet
  payments:
    build: payments_micro
    links:
      - paymentsdb
    ports:
      - 1337:1337
    networks:
      - webnet
    environment:
      - DOCKER=isTrue
    command: npm run migrateDB
volumes:
  db-data:
networks:
  webnet: